// Generated by CoffeeScript 1.8.0
(function() {
  var Terrain, terrain;

  Terrain = (function() {
    var average;

    average = function(values) {
      var total, valid;
      valid = values.filter(function(val) {
        return val !== -1;
      });
      total = valid.reduce((function(sum, val) {
        return sum + val;
      }), 0);
      return total / valid.length;
    };

    function Terrain(detail) {
      this.size = Math.pow(2, detail) + 1;
      this.max = this.size - 1;
      this.map = new Float32Array(this.size * this.size);
    }

    Terrain.prototype.get = function(x, y) {
      if (x < 0 || x > this.max || y < 0 || y > this.max) {
        return -1;
      }
      return this.map[x + this.size * y];
    };

    Terrain.prototype.set = function(x, y, val) {
      return this.map[x + this.size * y] = val;
    };

    Terrain.prototype._divide = function(size) {
      var half, scale, x, y, _ref;
      _ref = [], x = _ref[0], y = _ref[1];
      half = size / 2;
      scale = roughness * size;
      if (half < 1) {
        return;
      }
      
    for (y = half; y < this.max; y += size) {
      for (x = half; x < this.max; x += size) {
        this._square(x, y, half, Math.random() * scale * 2 - scale);
      }
    }
    for (y = 0; y <= this.max; y += half) {
      for (x = (y + half) % size; x <= this.max; x += size) {
        this._diamond(x, y, half, Math.random() * scale * 2 - scale);
      }
    }
    ;
      return this._divide(size / 2);
    };

    Terrain.prototype._square = function(x, y, size, offset) {
      var ave;
      ave = average([this.get(x - size, y - size), this.get(x + size, y - size), this.get(x + size, y + size), this.get(x - size, y + size)]);
      return this.set(x, y, ave + offset);
    };

    Terrain.prototype._diamond = function(x, y, size, offset) {
      var ave;
      ave = average([this.get(x, y - size), this.get(x + size, y), this.get(x, y + size), this.get(x - size, y)]);
      return this.set(x, y, ave + offset);
    };

    Terrain.prototype.generate = function(roughness) {
      this.set(0, 0, self.max);
      this.set(this.max, 0, self.max / 2);
      this.set(this.max, this.max, 0);
      this.set(0, this.max, self.max / 2);
      return this._divide(this.max);
    };

    return Terrain;

  })();

  terrain = new Terrain(3);

  terrain.generate();

  console.log(terrain.map);

}).call(this);
